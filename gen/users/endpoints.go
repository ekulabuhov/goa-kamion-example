// Code generated by goa v3.7.3, DO NOT EDIT.
//
// users endpoints
//
// Command:
// $ goa gen goa-kamion-example/design

package users

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "users" service endpoints.
type Endpoints struct {
	Invite goa.Endpoint
}

// NewEndpoints wraps the methods of the "users" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Invite: NewInviteEndpoint(s),
	}
}

// Use applies the given middleware to all the "users" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Invite = m(e.Invite)
}

// NewInviteEndpoint returns an endpoint function that calls the method
// "invite" of service "users".
func NewInviteEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*InvitePayload)
		return s.Invite(ctx, p)
	}
}
